plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
    id 'com.diffplug.spotless' version '8.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'timur_kaliyakbarov'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
checkstyle {
    // фиксируем версию Checkstyle
    toolVersion = '11.0.1'

    // где лежит наш конфиг (см. шаг 2)
    configFile = file("$rootDir/config/checkstyle/checkstyle.xml")
}
spotless {
    java {
        // Palantir Java Format
        palantirJavaFormat()
    }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    runtimeOnly 'org.postgresql:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.withType(Checkstyle).configureEach {
    reports {
        html.required = true
    }
}

// чтобы перед сборкой вызывалась проверка checkstyle
build {
    dependsOn checkstyleMain
}